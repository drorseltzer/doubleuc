class {{CLASS_NAME}} extends HTMLElement {
  constructor() {
    super();
    this.attachShadow({ mode: 'open' });
    this.isRendered = false;
  }

  static get observedAttributes() {
    {{OBSERVED_ATTRIBUTES}};
  }

  {{GETTERS_SETTERS}}

  {{METHODS}}

  initAttributes() {
    {{ATTRIBUTES_INITS}}
  }

  initListeners() {
    {{LISTENERS_INITS}}
  }

  connectedCallback() {
    this.initAttributes();
    {{CONNECTED_CALLBACKS}}
    this.firstRender();
  }

  disconnectedCallback() {
    {{DISCONNECTED_CALLBACKS}}
  }

  adoptedCallback() {
    {{ADOPTED_CALLBACKS}}
  }

  attributeChangedCallback(name, oldValue, newValue) {
    if (newValue !== oldValue && this.isRendered) this.render();
    {{ATTRIBUTE_CHANGED_CALLBACKS}}
  }

  firstRender() {
    this.shadowRoot.innerHTML = `
      <style>{{STYLE}}</style>
      <div class="ref">
        {{TEMPLATE_HTML}}
      </div>
    `.trim();
    this.initListeners();
    this.isRendered = true;
  }

  render() {
    const ref = this.shadowRoot.querySelector('.ref');
    ref.innerHTML = `{{TEMPLATE_HTML}}`;
    this.initListeners();
  }
}

customElements.define('{{TAG_NAME}}', {{CLASS_NAME}});
